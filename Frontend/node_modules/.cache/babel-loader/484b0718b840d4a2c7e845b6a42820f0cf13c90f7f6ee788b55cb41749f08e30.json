{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nfunction AuthPage() {\n  _s();\n  const navigate = useNavigate(); // Használjuk a React Router navigate funkcióját\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const handleRegisterSubmit = event => {\n    event.preventDefault();\n    if (password === confirmPassword) {\n      localStorage.setItem(username, password);\n      alert('Sikeres regisztráció! Most már be tudsz jelentkezni.');\n      setIsLogin(true);\n      resetForm();\n    } else {\n      alert('A jelszavak nem egyeznek meg!');\n    }\n  };\n  const handleLoginSubmit = event => {\n    event.preventDefault();\n    const storedPassword = localStorage.getItem(username);\n    if (storedPassword === password) {\n      alert('Sikeres bejelentkezés!');\n      navigate(\"/home\"); //  Átirányítás a Home oldalra\n    } else {\n      alert('Érvénytelen felhasználónév vagy jelszó!');\n    }\n  };\n}\n_s(AuthPage, \"78/zeFDtWraWel/LyDL2BjdjNYc=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["useNavigate","AuthPage","_s","navigate","isLogin","setIsLogin","useState","username","setUsername","password","setPassword","fullName","setFullName","confirmPassword","setConfirmPassword","handleRegisterSubmit","event","preventDefault","localStorage","setItem","alert","resetForm","handleLoginSubmit","storedPassword","getItem","_c","$RefreshReg$"],"sources":["C:/Users/Attila/Desktop/GoBike/Frontend/src/index.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\n\r\nfunction AuthPage() {\r\n  const navigate = useNavigate(); // Használjuk a React Router navigate funkcióját\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const handleRegisterSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (password === confirmPassword) {\r\n      localStorage.setItem(username, password);\r\n      alert('Sikeres regisztráció! Most már be tudsz jelentkezni.');\r\n      setIsLogin(true);\r\n      resetForm();\r\n    } else {\r\n      alert('A jelszavak nem egyeznek meg!');\r\n    }\r\n  };\r\n\r\n  const handleLoginSubmit = (event) => {\r\n    event.preventDefault();\r\n    const storedPassword = localStorage.getItem(username);\r\n    if (storedPassword === password) {\r\n      alert('Sikeres bejelentkezés!');\r\n      navigate(\"/home\"); //  Átirányítás a Home oldalra\r\n    } else {\r\n      alert('Érvénytelen felhasználónév vagy jelszó!');\r\n    }\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMS,oBAAoB,GAAIC,KAAK,IAAK;IACtCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIR,QAAQ,KAAKI,eAAe,EAAE;MAChCK,YAAY,CAACC,OAAO,CAACZ,QAAQ,EAAEE,QAAQ,CAAC;MACxCW,KAAK,CAAC,sDAAsD,CAAC;MAC7Df,UAAU,CAAC,IAAI,CAAC;MAChBgB,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACLD,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIN,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMM,cAAc,GAAGL,YAAY,CAACM,OAAO,CAACjB,QAAQ,CAAC;IACrD,IAAIgB,cAAc,KAAKd,QAAQ,EAAE;MAC/BW,KAAK,CAAC,wBAAwB,CAAC;MAC/BjB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLiB,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;AACH;AAAClB,EAAA,CA9BQD,QAAQ;EAAA,QACED,WAAW;AAAA;AAAAyB,EAAA,GADrBxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}